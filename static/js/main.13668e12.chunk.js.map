{"version":3,"sources":["reducers/error.js","reducers/user.js","reducers/search.js","reducers/sets.js","reducers/tasks.js","reducers/viewedAccounts.js","reducers/index.js","actions/types.js","store/index.js","Components/Pages/NotFoundPage.jsx","api/index.js","actions/user.js","Components/StatisticItem/index.jsx","Components/UserHeader/index.jsx","actions/tasks.js","actions/error.js","utils/index.js","actions/sets.js","Components/SetSelectDialog/index.jsx","Components/Post/index.jsx","Components/Pages/UserPage.jsx","actions/viewedAccounts.js","actions/search.js","Components/Search/index.jsx","context.js","Components/Logo/index.jsx","Components/Header/index.jsx","Components/NavDrawer/DrawerItem.jsx","Components/NavDrawer/index.jsx","Components/Empty/index.jsx","Components/Section/index.jsx","Components/Task/index.jsx","Components/Pages/TasksPage.jsx","Components/Set/index.jsx","Components/SetCreateDialog/index.jsx","Components/SetOperationsDialog/index.jsx","Components/Pages/SetsPage.jsx","Components/ViewedAccount/index.jsx","Components/Pages/HomePage.jsx","Components/App/index.jsx","serviceWorker.js","index.js"],"names":["initialState","isOpen","error","message","user","status","searchUsers","sets","id","name","accounts","delayInTask","tasks","viewedAccounts","combineReducers","state","action","type","payload","search","map","s","filter","set","find","setId","Map","account","node","values","item","console","log","newAccounts","a","length","slice","createStore","rootReducer","applyMiddleware","thunk","useStyles","makeStyles","theme","root","display","flexDirection","alignItems","title","marginTop","spacing","marginBottom","NotFoundPage","classes","history","useHistory","getRandomEmotion","emotion","Math","floor","random","useState","currentEmotion","setCurrentEmotion","ButtonBase","disableRipple","disableTouchRipple","className","onClick","Grow","in","Typography","variant","Box","fontSize","color","Button","size","startIcon","ArrowForwardRounded","push","getLikesOnPost","shortcode","after","first","axios","get","params","query_id","setStatusGetUser","setErrorGetUser","getUser","username","dispatch","__a","getUserInfo","then","result","data","graphql","catch","response","marginRight","marginLeft","value","StatisticItem","text","avatar","width","height","margin","biography","whiteSpace","stats","justifyContent","breakpoints","down","UserHeader","fullName","profilePicUrl","postsCount","followersCount","followingCount","Zoom","Avatar","src","textAlign","component","updateTask","task","runTask","getState","t","isWorking","args","isDone","createError","isTaskStop","timeout","ms","Promise","resolve","setTimeout","addSet","addAccounts","addAllAccountsFromLikes","taskId","hasNextPage","edgeLikedBy","shortcode_media","edge_liked_by","edges","page_info","has_next_page","end_cursor","SetSelectDialog","onClose","open","Dialog","DialogTitle","DialogContent","DialogContentText","List","disablePadding","subheader","ListSubheader","disableGutters","ListItem","button","key","ListItemText","primary","content","padding","cover","backgroundColor","palette","background","light","defaultImage","zIndex","paddingTop","image","Post","likeCount","commentCount","previewLink","useDispatch","useSelector","openSetDialog","setOpenSetDialog","isLoadingImage","setIsLoadingImage","Card","CardMedia","onLoad","CardContent","CardActions","taskName","uuidv4","now","Date","startDate","getTime","addTask","startGetLikes","UserPage","props","isOpenErrorSnackbar","setIsOpenErrorSnackbar","useEffect","match","CircularProgress","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","event","reason","full_name","profile_pic_url","edge_owner_to_timeline_media","count","edge_followed_by","edge_follow","Grid","container","edge","direction","xs","sm","md","edge_media_to_comment","thumbnail_src","setStatusSearchUsers","setErrorSearchUsers","query","searchByQuery","users","borderRadius","maxWidth","overflowX","transition","transitions","create","duration","short","up","expandedSearch","common","white","paddingLeft","paddingRight","searchInput","flexGrow","results","overflowY","maxHeight","Search","setExpandedSearch","setQuery","delayedSearch","useCallback","_","debounce","q","Paper","elevation","clsx","onFocus","onBlur","Hidden","xsDown","InputBase","placeholder","onChange","target","IconButton","ClearRounded","Collapse","LinearProgress","dense","pk","ListItemAvatar","textOverflow","overflow","Context","React","createContext","logo","userSelect","logoAdditional","minWidth","standard","Logo","logoText","setLogoText","isActive","setIsActive","handleOnMouseOverLogo","handleOnMouseOutLogo","onMouseOver","onMouseOut","drawer","menuButton","Header","toggleMenu","useContext","AppBar","position","DrawerItem","icon","ListItemIcon","flexShrink","paper","border","close","list","NavDrawer","isOpenMenu","isMobile","goPage","pagePath","Drawer","anchor","Toolbar","isSelected","HomeOutlined","ArchiveOutlined","AssignmentOutlined","minHeight","Empty","SentimentDissatisfied","Section","children","statusText","settings","Task","fontWeight","toLocaleTimeString","thickness","handleUpdateTask","StopRounded","DoneAllRounded","CloseRounded","flexWrap","paddingBottom","settingsItemAction","settingsItemContent","settingItem","TasksPage","CardActionArea","DeleteOutlineRounded","Slider","newValue","step","min","max","header","headerTitle","headerSubtitle","expand","transform","shortest","expandOpen","actions","actionsButton","pagination","accountAvatar","csvExportLink","textDecoration","menuIcon","headCells","label","SetMenu","anchorEl","setAnchorEl","handleClose","currentTarget","MoreVertRounded","keepMounted","Boolean","MenuItem","clearAccounts","ClearAllRounded","smUp","style","filename","SaveAltRounded","Set","page","setPage","rowsPerPage","isExpanded","setIsExpanded","noWrap","disableElevation","TableContainer","Table","TableHead","TableRow","headCell","TableCell","align","TableBody","row","hover","is_verified","TablePagination","rowsPerPageOptions","onChangePage","newPage","SetCreateDialog","setName","setSetName","TextField","autoFocus","fullWidth","DialogActions","newSet","handleCreateClick","control","SetOperationsDialog","select","selectedSets","setSelectedSets","operation","setOperation","newSets","selectedSet","getAccounts","setA","setB","union","some","b","intersection","subtraction","FormControl","FormLabel","RadioGroup","FormControlLabel","Radio","FormGroup","Checkbox","checked","handleChange","FormHelperText","tablePaper","SetsPage","openSetCreateDialog","setOpenSetCreateDialog","openSetOperatorDialog","setOpenSetOperatorDialog","AddRounded","justify","RemoveCircleOutlineRounded","HighlightOffRounded","AddCircleOutlineRounded","updateSet","ViewedAccount","profilePic","empty","statsCard","HomePage","customTheme","createMuiTheme","main","dark","secondary","typography","fontFamily","join","App","useMediaQuery","noSsr","setIsOpenMenu","store","ThemeProvider","responsiveFontSizes","Provider","basename","process","Container","path","exact","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.13668e12.chunk.js","sourcesContent":["import {CREATE_ERROR, SET_OPEN_ERROR} from \"../actions/types\"\n\nconst initialState = {\n    isOpen: false,\n    error: {\n        message: null\n    }\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case SET_OPEN_ERROR:\n            return {\n                ...state,\n                isOpen: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import {GET_USER, SET_ERROR_GET_USER, SET_STATUS_GET_USER} from '../actions/types'\n\nconst initialState = {\n    user: null,\n    status: 'idle', // 'idle' | 'loading' | 'succeeded' | 'failed',\n    error: null\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_STATUS_GET_USER:\n            return {\n                ...state,\n                status: action.payload\n            }\n        case SET_ERROR_GET_USER:\n            return {\n                ...state,\n                status: 'failed',\n                error: action.payload\n            }\n        case GET_USER:\n            return {\n                ...state,\n                user: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import {\n    SEARCH_USER,\n    SEARCH_USER_CLEAR,\n    SET_ERROR_SEARCH_USERS,\n    SET_STATUS_SEARCH_USERS\n} from '../actions/types'\n\nconst initialState = {\n    searchUsers: [],\n    status: 'idle', // 'idle' | 'loading' | 'succeeded' | 'failed',\n    error: null\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_STATUS_SEARCH_USERS:\n            return {\n                ...state,\n                status: action.payload\n            }\n        case SET_ERROR_SEARCH_USERS:\n            return {\n                ...state,\n                status: 'failed',\n                error: action.payload\n            }\n        case SEARCH_USER:\n            return {\n                ...state,\n                searchUsers: action.payload\n            }\n        case SEARCH_USER_CLEAR:\n            return {\n                ...state,\n                searchUsers: []\n            }\n        default:\n            return state\n    }\n}\n","import {ADD_ACCOUNTS, ADD_SET, CLEAR_ACCOUNTS, CLEAR_SETS, DELETE_SET, UPDATE_SET} from '../actions/types'\n\nconst initialState = {\n    sets: [\n        {\n            id: '0598cf75-bbe5-40d1-85e8-5d04f2a2ad6a',\n            name: 'Untitled set #1',\n            accounts: []\n        },\n        {\n            id: '6ad7ade8-573a-467f-97b6-81204f6d14a4',\n            name: 'Untitled set #2',\n            accounts: []\n        }\n    ]\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_SET:\n            return {\n                ...state,\n                sets: [...state.sets, action.payload]\n            }\n        case UPDATE_SET:\n            return {\n                ...state,\n                sets: state.sets.map((s) => s.id === action.payload.id ? action.payload : s)\n            }\n        case DELETE_SET:\n            return {\n                ...state,\n                sets: state.sets.filter((s) => s.id !== action.payload)\n            }\n        case CLEAR_SETS:\n            return {\n                ...state,\n                sets: []\n            }\n        case ADD_ACCOUNTS:\n            const set = state.sets.find(s => s.id === action.payload.setId)\n            const accounts = [...set.accounts, ...action.payload.accounts]\n\n            set.accounts = [...new Map(accounts.map(account => [account.node.id, account])).values()]\n\n            return {\n                ...state,\n                sets: state.sets.map((s) => s.id === action.payload.setId ? set: s)\n            }\n        case CLEAR_ACCOUNTS:\n            return {\n                ...state,\n                sets: state.sets.map((s) => s.id === action.payload ? {...s, accounts: []}: s)\n            }\n        default:\n            return state\n    }\n}\n","import {ADD_TASK, CLEAR_TASKS, DELETE_TASK, SET_DELAY_IN_TASK, UPDATE_TASK} from \"../actions/types\"\n\nconst initialState = {\n    delayInTask: 2500,\n    tasks: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TASK:\n            return {\n                ...state,\n                tasks: [...state.tasks, action.payload]\n            }\n        case DELETE_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.filter((item) => item.id !== action.payload)\n            }\n        case UPDATE_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.map((item) => item.id === action.payload.id ? action.payload : item)\n            }\n        case CLEAR_TASKS:\n            return {\n                ...state,\n                tasks: []\n            }\n        case SET_DELAY_IN_TASK:\n            return {\n                ...state,\n                delayInTask: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import {ADD_VIEWED_ACCOUNT, CLEAR_VIEWED_ACCOUNTS, DELETE_VIEWED_ACCOUNT} from \"../actions/types\"\n\nconst initialState = {\n    viewedAccounts: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_VIEWED_ACCOUNT:\n            console.log(action.payload)\n            let newAccounts = []\n\n            if (!state.viewedAccounts.find(a => a.id === action.payload.id)) {\n                if (state.viewedAccounts.length === 10) {\n                    newAccounts = [...state.viewedAccounts.slice(1), action.payload]\n                } else {\n                    console.log(action.payload)\n                    newAccounts = [...state.viewedAccounts, action.payload]\n                }\n            } else {\n                newAccounts = [...state.viewedAccounts]\n            }\n\n            return {\n                ...state,\n                viewedAccounts: newAccounts\n            }\n        case DELETE_VIEWED_ACCOUNT:\n            return {\n                ...state,\n                viewedAccounts: state.viewedAccounts.filter((item) => item.id !== action.payload)\n            }\n        case CLEAR_VIEWED_ACCOUNTS:\n            return {\n                ...state,\n                viewedAccounts: []\n            }\n        default:\n            return state\n    }\n}\n","import error from \"./error\"\nimport user from \"./user\"\nimport search from \"./search\"\nimport sets from \"./sets\"\nimport tasks from \"./tasks\"\nimport viewedAccounts from \"./viewedAccounts\"\n\nimport {combineReducers} from \"redux\"\n\nexport default combineReducers({error, user, search, sets, tasks, viewedAccounts})\n","export const SET_STATUS_GET_USER = 'SET_STATUS_GET_USER'\nexport const SET_ERROR_GET_USER = 'SET_ERROR_GET_USER'\nexport const GET_USER = 'GET_USER'\n\nexport const SET_STATUS_SEARCH_USERS = 'SET_STATUS_SEARCH_USERS'\nexport const SET_ERROR_SEARCH_USERS = 'SET_ERROR_SEARCH_USERS'\nexport const SEARCH_USER = 'SEARCH_USER'\nexport const SEARCH_USER_CLEAR = 'SEARCH_USER_CLEAR'\n\nexport const ADD_ACCOUNTS = 'ADD_ACCOUNTS'\nexport const CLEAR_ACCOUNTS = 'CLEAR_ACCOUNTS'\n\nexport const ADD_SET = 'ADD_SET'\nexport const DELETE_SET = 'DELETE_SET'\nexport const UPDATE_SET = 'UPDATE_SET'\nexport const CLEAR_SETS = 'CLEAR_SETS'\n\nexport const ADD_TASK = 'ADD_TASK'\nexport const UPDATE_TASK = 'UPDATE_TASK'\nexport const DELETE_TASK = 'DELETE_TASK'\nexport const CLEAR_TASKS = 'CLEAR_TASKS'\nexport const SET_DELAY_IN_TASK = 'SET_DELAY_IN_TASK'\n\nexport const CREATE_ERROR = 'CREATE_ERROR'\nexport const SET_OPEN_ERROR = 'SET_OPEN_ERROR'\n\nexport const ADD_VIEWED_ACCOUNT = 'ADD_VIEWED_ACCOUNT'\nexport const DELETE_VIEWED_ACCOUNT = 'DELETE_VIEWED_ACCOUNT'\nexport const CLEAR_VIEWED_ACCOUNTS = 'CLEAR_VIEWED_ACCOUNTS'\n","import {applyMiddleware, compose, createStore} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\n\nexport default createStore(rootReducer, applyMiddleware(thunk))\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n// export default createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n","import React, {useState} from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {useHistory} from \"react-router-dom\"\nimport Grow from \"@material-ui/core/Grow\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport {ArrowForwardRounded} from \"@material-ui/icons\"\nimport {Box, ButtonBase} from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    title: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(6)\n    }\n}))\n\nexport default function NotFoundPage() {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const getRandomEmotion = () => {\n        return emotion[Math.floor(Math.random() * emotion.length)]\n    }\n\n    const emotion = ['(>_<)', '(≥o≤)', '(^-^)', '-_-', '(>^.^)>', '(;-;)', '(·.·)', '\\\\(o_o)/']\n    const [currentEmotion, setCurrentEmotion] = useState(getRandomEmotion())\n\n    const goHome = () => {\n        history.push('/')\n    }\n\n    return (\n        <ButtonBase disableRipple disableTouchRipple className={classes.root} onClick={() => setCurrentEmotion(getRandomEmotion)}>\n            <div className={classes.title}>\n                <Grow in={true}>\n                    <Typography variant='overline'>\n                        <Box fontSize={100} color='text.disabled'>\n                            {currentEmotion}\n                        </Box>\n                    </Typography>\n                </Grow>\n                <Typography>\n                    <Box color='text.secondary'>\n                        {'Not found.'}\n                    </Box>\n                </Typography>\n            </div>\n\n            <Button\n                variant='outlined'\n                color='primary'\n                size='large'\n                startIcon={<ArrowForwardRounded/>}\n                onClick={() => goHome()}\n            >\n                Home page\n            </Button>\n        </ButtonBase>\n    )\n}\n","import axios from \"axios\"\n\nexport const getLikesOnPost = (shortcode, after = '', first = 50) => {\n    return axios.get('https://www.instagram.com/graphql/query/', {\n        params: {\n            query_id: 17864450716183058,\n            shortcode: shortcode,\n            first: first,\n            after: after\n        }\n    })\n}\n\nexport const getUserInfo = (username) => {\n    return axios.get(`https://www.instagram.com/${username}`, {\n        params: {\n            __a: 1\n        }\n    })\n}\n\nexport const searchByQuery = (query) => {\n    return axios.get('https://www.instagram.com/web/search/topsearch/', {\n        params: {\n            query: query\n        }\n    })\n}\n","import {GET_USER, SET_ERROR_GET_USER, SET_STATUS_GET_USER} from './types'\n\nimport {getUserInfo} from \"../api\"\n\nexport const setStatusGetUser = (status) => ({\n    type: SET_STATUS_GET_USER,\n    payload: status\n})\n\nexport const setErrorGetUser = (error) => ({\n    type: SET_ERROR_GET_USER,\n    payload: error\n})\n\nexport const addUser = (user) => ({\n    type: GET_USER,\n    payload: user\n})\n\nexport const getUser = (username) => (dispatch) => {\n    dispatch(setStatusGetUser('loading'))\n\n    getUserInfo(username)\n        .then((result) => {\n            if (result.data.graphql) {\n                dispatch(addUser(result.data.graphql.user))\n                dispatch(setStatusGetUser('succeeded'))\n            } else {\n                dispatch(setErrorGetUser({message: 'Error getting information from Instagram'}))\n            }\n        })\n        .catch((error) => {\n            if (error.response && (error.response.status === 404)) {\n                dispatch(setErrorGetUser({message: 'Error getting information from Instagram', status: 404}))\n            } else {\n                dispatch(setErrorGetUser({message: 'Error getting information from Instagram'}))\n            }\n        })\n}\n","import Typography from \"@material-ui/core/Typography\"\nimport {Box} from \"@material-ui/core\"\nimport React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(2),\n    },\n    value: {\n        marginRight: theme.spacing(1)\n    }\n}))\n\nexport default function StatisticItem({text, value}) {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Typography  className={classes.value} variant='subtitle2'>\n                <Box fontSize=\"h6.fontSize\">\n                    {value}\n                </Box>\n            </Typography>\n            <Typography variant='subtitle2' color='textSecondary'>{text}</Typography>\n        </div>\n    )\n}\n","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Zoom from \"@material-ui/core/Zoom\"\nimport {Box} from \"@material-ui/core\"\nimport StatisticItem from \"../StatisticItem\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    avatar: {\n        width: theme.spacing(16),\n        height: theme.spacing(16),\n    },\n\n    title: {\n        margin: theme.spacing(1),\n        marginBottom: theme.spacing(2),\n    },\n    biography: {\n        whiteSpace: 'pre-line'\n    },\n    stats: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: theme.spacing(2),\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    }\n}))\n\nexport default function UserHeader({username, fullName, biography, profilePicUrl, postsCount, followersCount, followingCount}) {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Zoom in={true}>\n                <Avatar className={classes.avatar} src={profilePicUrl}/>\n            </Zoom>\n\n            <div>\n                <div className={classes.title}>\n                    <Typography variant=\"h6\">\n                        <Box textAlign=\"center\">\n                            {username}\n                        </Box>\n                    </Typography>\n                    <Typography variant=\"overline\" color='textSecondary'>\n                        <Box textAlign=\"center\" fontSize=\"h6.fontSize\">\n                            {fullName}\n                        </Box>\n                    </Typography>\n                    <Typography component='div' className={classes.biography}>\n                        <Box textAlign=\"center\">\n                            {biography}\n                        </Box>\n                    </Typography>\n                </div>\n                <div className={classes.stats}>\n                    <StatisticItem text='Posts' value={postsCount}/>\n                    <StatisticItem text='Followers' value={followersCount}/>\n                    <StatisticItem text='Following' value={followingCount}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import {ADD_TASK, CLEAR_TASKS, DELETE_TASK, SET_DELAY_IN_TASK, UPDATE_TASK} from './types'\n\nexport const addTask = (task) => ({\n    type: ADD_TASK,\n    payload: task\n})\n\nexport const deleteTask = (id) => ({\n    type: DELETE_TASK,\n    payload: id\n})\n\nexport const updateTask = (task) => ({\n    type: UPDATE_TASK,\n    payload: task\n})\n\nexport const clearTasks = () => ({\n    type: CLEAR_TASKS\n})\n\nexport const setDelayInTask = (delay) => ({\n    type: SET_DELAY_IN_TASK,\n    payload: delay\n})\n\nexport const nextTask = () => (dispatch, getState) => {\n    const task = getState().tasks.tasks.find(t => t.isWorking === false && t.isDone === false)\n\n    if (task) {\n        dispatch(runTask(task))\n    }\n}\n\nexport const runTask = (task) => async (dispatch, getState) => {\n    const workingTask = getState().tasks.tasks.find(t => t.isWorking === true)\n\n    if (!workingTask) {\n        dispatch(updateTask({...task, isWorking: true}))\n\n        await dispatch(task.action(...task.args))\n\n        dispatch(updateTask({...task, isWorking: false, isDone: true}))\n\n        dispatch(nextTask())\n    }\n}\n","import {CREATE_ERROR, SET_OPEN_ERROR} from \"./types\"\n\nexport const setIsOpenError = (isOpen) => ({\n    type: SET_OPEN_ERROR,\n    payload: isOpen\n})\n\nexport const createError = (error) => (dispatch) => {\n    dispatch({\n        type: CREATE_ERROR,\n        payload: error\n    })\n\n    dispatch(setIsOpenError(true))\n}\n","export const isTaskStop = (task) => {\n    if (task) {\n        return !task.isWorking\n    } else {\n        return true\n    }\n}\n\nexport const timeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport const union = (setA, setB) => {\n    const newSet = [...setA, ...setB]\n    return [...new Map(newSet.map(account => [account.node.id, account])).values()]\n}\n\nexport const intersection = (setA, setB) => {\n    return setA.filter(a => setB.some(b => b.node.id === a.node.id))\n}\n\nexport const subtraction = (setA, setB) => {\n    return setA.filter(a => !setB.some(b => b.node.id === a.node.id))\n}\n","import {ADD_ACCOUNTS, ADD_SET, CLEAR_ACCOUNTS, CLEAR_SETS, DELETE_SET, UPDATE_SET} from './types'\n\nimport {createError} from \"./error\"\nimport {getLikesOnPost} from \"../api\"\nimport {isTaskStop, timeout} from \"../utils\"\n\nexport const addSet = (set) => ({\n    type: ADD_SET,\n    payload: set\n})\n\nexport const updateSet = (set) => ({\n    type: UPDATE_SET,\n    payload: set\n})\n\nexport const deleteSet = (id) => ({\n    type: DELETE_SET,\n    payload: id\n})\n\nexport const clearSets = () => ({\n    type: CLEAR_SETS\n})\n\nexport const addAccounts = (setId, accounts) => ({\n    type: ADD_ACCOUNTS,\n    payload: {setId, accounts}\n})\n\nexport const clearAccounts = (setId) => ({\n    type: CLEAR_ACCOUNTS,\n    payload: setId\n})\n\nexport const addAllAccountsFromLikes = (shortcode, setId, taskId) => async (dispatch, getState) => {\n    let hasNextPage = true\n    let after = ''\n\n    while (hasNextPage && !isTaskStop(getState().tasks.tasks.find(t => t.id === taskId))) {\n        await getLikesOnPost(shortcode, after)\n            .then((result) => {\n                if (result.data.data) {\n                    const edgeLikedBy = result.data.data.shortcode_media.edge_liked_by\n\n                    dispatch(addAccounts(setId, edgeLikedBy.edges))\n\n                    hasNextPage = edgeLikedBy.page_info.has_next_page\n                    after = edgeLikedBy.page_info.end_cursor\n                } else {\n                    dispatch(createError({message: 'Error getting information from Instagram'}))\n                    hasNextPage = false\n                }\n            })\n            .catch((error) => {\n                dispatch(createError({message: 'Error getting information from Instagram'}))\n                hasNextPage = false\n            })\n\n        if (hasNextPage && !isTaskStop(getState().tasks.tasks.find(t => t.id === taskId))) {\n            await timeout(getState().tasks.delayInTask)\n        }\n    }\n}\n","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport {DialogContentText} from \"@material-ui/core\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {}\n}))\n\nexport default function SetSelectDialog({sets, onClose, open}) {\n    const classes = useStyles()\n\n    const handleListItemClick = (value) => {\n        onClose(value)\n    }\n\n    return (\n        <Dialog open={open} onClose={() => onClose()}>\n            <DialogTitle>Set</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Select the set to which you want to add accounts.\n                </DialogContentText>\n                <List\n                    disablePadding\n                    subheader={<ListSubheader disableGutters>Account sets</ListSubheader>}\n                >\n                    {sets.map((set) => (\n                        <ListItem button onClick={() => handleListItemClick(set)} key={set.id}>\n                            <ListItemText primary={set.name} />\n                        </ListItem>\n                    ))}\n                </List>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React, {useState} from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Button from \"@material-ui/core/Button\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\nimport StatisticItem from \"../StatisticItem\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {addTask, runTask} from \"../../actions/tasks\"\nimport {v4 as uuidv4} from 'uuid'\nimport {addAllAccountsFromLikes} from \"../../actions/sets\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport SetDialog from \"../SetSelectDialog\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n    },\n    content: {\n        padding: theme.spacing(1),\n    },\n    cover: {\n        display: 'flex',\n        width: '100%',\n        backgroundColor: theme.palette.background.light,\n    },\n    defaultImage: {\n        zIndex: 2,\n        paddingTop: '100%'\n    },\n    image: {\n        zIndex: 1,\n        width: '100%',\n    }\n}))\n\nexport default function Post({username, shortcode, likeCount, commentCount, previewLink}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const sets = useSelector(state => state.sets.sets)\n\n    const [openSetDialog, setOpenSetDialog] = useState(false)\n    const [isLoadingImage, setIsLoadingImage] = useState(true)\n\n    const startGetLikes = (shortcode, setId, taskName) => {\n        const id = uuidv4()\n        const now = new Date()\n\n        const task = {\n            id: id,\n            isWorking: false,\n            isDone: false,\n            action: addAllAccountsFromLikes,\n            args: [shortcode, setId, id],\n            startDate: now.getTime(),\n            name: taskName\n        }\n\n        dispatch(addTask(task))\n        dispatch(runTask(task))\n    }\n\n    const handleClickOpen = () => {\n        setOpenSetDialog(true)\n    }\n\n    const handleClose = (set) => {\n        setOpenSetDialog(false)\n        if (set) {\n            startGetLikes(shortcode, set.id, `Add accounts from ${username}'s post likes to ${set.name}`)\n        }\n    }\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <div className={classes.cover}>\n                {isLoadingImage && <div className={classes.defaultImage}/>}\n\n                <CardMedia\n                    className={classes.image}\n                    component=\"img\"\n                    image={previewLink}\n                    onLoad={() => setIsLoadingImage(false)}\n                />\n            </div>\n\n\n            <CardContent className={classes.content}>\n                <StatisticItem value={likeCount} text='Likes'/>\n                <StatisticItem value={commentCount} text='Comments'/>\n            </CardContent>\n            <CardActions>\n                <Button onClick={() => handleClickOpen()}>\n                    Get likes\n                </Button>\n            </CardActions>\n\n            <SetDialog sets={sets} open={openSetDialog} onClose={handleClose}/>\n        </Card>\n    )\n}\n","import React, {useEffect, useState} from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {useHistory} from \"react-router-dom\"\nimport {getUser, setStatusGetUser} from \"../../actions/user\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport UserHeader from '../UserHeader'\nimport Post from \"../Post\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Zoom from \"@material-ui/core/Zoom\"\nimport {addViewedAccount} from \"../../actions/viewedAccounts\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    }\n}))\n\nexport default function UserPage(props) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const user = useSelector(state => state.user.user)\n    const status = useSelector(state => state.user.status)\n    const error = useSelector(state => state.user.error)\n\n    const [isOpenErrorSnackbar, setIsOpenErrorSnackbar] = useState(false)\n\n    useEffect(() => {\n        if (status === 'failed') {\n            setIsOpenErrorSnackbar(true)\n\n            if (error.status && error.status === 404) {\n                history.push('/notfound')\n            }\n        }\n    }, [history, error, status])\n\n    useEffect(() => {\n        dispatch(setStatusGetUser('idle'))\n        dispatch(getUser(props.match.params.username))\n    }, [dispatch, props.match.params.username])\n\n    useEffect(() => {\n        if (user) {\n            dispatch(addViewedAccount(user))\n        }\n    }, [user])\n\n    const closeSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n        setIsOpenErrorSnackbar(false)\n    }\n\n    return (\n        <div className={classes.root}>\n            {status === 'loading' && <CircularProgress/>}\n            {status === 'failed' &&\n            <Snackbar\n                anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n                autoHideDuration={2000}\n                open={isOpenErrorSnackbar}\n                message={error.message}\n                onClose={closeSnackbar}\n            />\n            }\n\n            {status === 'succeeded' &&\n            <div>\n                <UserHeader\n                    username={user.username}\n                    fullName={user.full_name}\n                    biography={user.biography}\n                    profilePicUrl={user.profile_pic_url}\n                    postsCount={user.edge_owner_to_timeline_media.count}\n                    followersCount={user.edge_followed_by.count}\n                    followingCount={user.edge_follow.count}\n                />\n\n                <Grid container spacing={2}>\n                    {user.edge_owner_to_timeline_media.edges.map((edge) =>\n                        <Zoom in={true} key={edge.node.id}>\n                            <Grid container direction=\"column\" item xs={12} sm={6} md={4}>\n                                <Post\n                                    username={user.username}\n                                    shortcode={edge.node.shortcode}\n                                    likeCount={edge.node.edge_liked_by.count}\n                                    commentCount={edge.node.edge_media_to_comment.count}\n                                    previewLink={edge.node.thumbnail_src}\n                                />\n                            </Grid>\n                        </Zoom>\n                    )}\n                </Grid>\n            </div>\n            }\n        </div>\n    )\n}\n","import {ADD_VIEWED_ACCOUNT, CLEAR_VIEWED_ACCOUNTS, DELETE_VIEWED_ACCOUNT} from \"./types\"\n\nexport const addViewedAccount = (account) => ({\n    type: ADD_VIEWED_ACCOUNT,\n    payload: account\n})\n\nexport const deleteViewedAccount = (accountId) => ({\n    type: DELETE_VIEWED_ACCOUNT,\n    payload: accountId\n})\n\nexport const clearViewedAccounts = () => ({\n    type: CLEAR_VIEWED_ACCOUNTS\n})\n","import {\n    SEARCH_USER,\n    SEARCH_USER_CLEAR,\n    SET_ERROR_SEARCH_USERS,\n    SET_STATUS_SEARCH_USERS\n} from './types'\n\nimport {searchByQuery} from \"../api\"\nexport const searchUsers = (users) => ({\n    type: SEARCH_USER,\n    payload: users\n})\n\nexport const clearSearchUsers = () => ({\n    type: SEARCH_USER_CLEAR\n})\n\nexport const setStatusSearchUsers = (status) => ({\n    type: SET_STATUS_SEARCH_USERS,\n    payload: status\n})\n\nexport const setErrorSearchUsers = (error) => ({\n    type: SET_ERROR_SEARCH_USERS,\n    payload: error\n})\nexport const search = (query) => (dispatch) => {\n    dispatch(setStatusSearchUsers('loading'))\n\n    searchByQuery(query)\n        .then((result) => {\n            if (result.data.users) {\n                dispatch(searchUsers(result.data.users))\n                dispatch(setStatusSearchUsers('succeeded'))\n            } else {\n                dispatch(setErrorSearchUsers({message: 'Error getting information from Instagram'}))\n            }\n        })\n        .catch(() => {\n            dispatch(setErrorSearchUsers({message: 'Error getting information from Instagram'}))\n        })\n}\n","import React, {useCallback, useState} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport InputBase from \"@material-ui/core/InputBase\"\n\nimport {useHistory} from \"react-router-dom\"\nimport Paper from \"@material-ui/core/Paper\"\nimport {ClearRounded} from \"@material-ui/icons\"\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded'\nimport Collapse from \"@material-ui/core/Collapse\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport Avatar from \"@material-ui/core/Avatar\"\n\nimport _ from \"lodash\"\nimport {clearSearchUsers, search} from \"../../actions/search\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport clsx from \"clsx\"\nimport LinearProgress from \"@material-ui/core/LinearProgress\"\nimport {Hidden} from \"@material-ui/core\"\nimport Box from \"@material-ui/core/Box\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        zIndex: 1,\n        borderRadius: theme.spacing(1, 1, 1, 1),\n        width: '100%',\n        maxWidth: '100%',\n        overflowX: 'hidden',\n        background: theme.palette.background.light,\n        transition: theme.transitions.create('all', {\n            duration: theme.transitions.duration.short\n        }),\n        [theme.breakpoints.up('xs')]: {\n            maxWidth: 500,\n        }\n    },\n    expandedSearch: {\n        background: theme.palette.common.white\n    },\n    search: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(1),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n    },\n    searchInput: {\n        marginLeft: theme.spacing(2),\n        flexGrow: 1\n    },\n    results: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        overflowY: 'auto',\n        maxHeight: 450\n    }\n}))\n\nexport default function Search() {\n    const classes = useStyles()\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const [expandedSearch, setExpandedSearch] = useState(false)\n\n    const searchUsers = useSelector(state => state.search.searchUsers)\n    const status = useSelector(state => state.search.status)\n\n    const [query, setQuery] = useState('')\n    const delayedSearch = useCallback(_.debounce(q => dispatch(search(q)), 500), [])\n\n    const onSearchUsername = (username) => {\n        if (username || username !== '') {\n            setExpandedSearch(false)\n            history.push(`/u/${username}`)\n        }\n    }\n\n    const onChange = (query) => {\n        setQuery(query)\n        delayedSearch(query)\n    }\n\n    const clearResults = () => {\n        setQuery('')\n        setExpandedSearch(false)\n        dispatch(clearSearchUsers())\n    }\n\n    return (\n        <Paper\n            elevation={expandedSearch ? 1 : 0}\n            className={clsx(classes.root, expandedSearch && classes.expandedSearch)}\n            onFocus={() => setExpandedSearch(true)}\n            onBlur={() => setExpandedSearch(false)}\n        >\n            <div className={classes.search}>\n                <Hidden xsDown>\n                    <SearchRoundedIcon color=\"action\"/>\n                </Hidden>\n\n                <InputBase\n                    className={classes.searchInput}\n                    value={query}\n                    placeholder=\"Search\"\n                    onChange={(event) => onChange(event.target.value)}\n                />\n\n                {(query || searchUsers.length !== 0) &&\n                <IconButton\n                    color='inherit'\n                    size='small'\n                    onClick={() => clearResults()}\n                >\n                    <ClearRounded/>\n                </IconButton>\n                }\n            </div>\n\n            <Collapse in={expandedSearch && status === 'loading'} timeout={150}>\n                <LinearProgress/>\n            </Collapse>\n\n            <Collapse in={expandedSearch && searchUsers.length !== 0} timeout={150}>\n                <List dense={true} className={classes.results}>\n                    {searchUsers.map((user) =>\n                        <ListItem button key={user.user.pk} onClick={() => onSearchUsername(user.user.username)}>\n                            <ListItemAvatar>\n                                <Avatar src={user.user.profile_pic_url}/>\n                            </ListItemAvatar>\n                            <ListItemText primary={\n                                <Box component='div' textOverflow=\"ellipsis\" overflow=\"hidden\">\n                                    {user.user.username}\n                                </Box>}\n                            />\n                        </ListItem>\n                    )}\n                </List>\n            </Collapse>\n        </Paper>\n    )\n}\n","import React from 'react'\n\nconst Context = React.createContext()\n\nexport default Context\n","import React, {useState} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {Typography} from \"@material-ui/core\"\nimport {timeout} from \"../../utils\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    logo: {\n        padding: theme.spacing(1, 0),\n        userSelect: 'none',\n        whiteSpace: 'nowrap',\n    },\n    logoAdditional: {\n        minWidth: 80,\n        padding: theme.spacing(1, 0),\n        marginRight: theme.spacing(2),\n        userSelect: 'none',\n        whiteSpace: 'nowrap',\n        transition: theme.transitions.create('all', {\n            duration: theme.transitions.duration.standard\n        }),\n    }\n}))\n\nexport default function Logo() {\n    const classes = useStyles()\n\n    const [logoText, setLogoText] = useState('insta->')\n    const [isActive, setIsActive] = useState(false)\n\n    const handleOnMouseOverLogo = async () => {\n        if (!isActive) {\n            setIsActive(true)\n            await timeout(100)\n            setLogoText('insta--')\n            await timeout(150)\n            setLogoText('insta>-')\n            await timeout(120)\n            setLogoText('insta->')\n            await timeout(100)\n            setIsActive(false)\n        }\n    }\n\n    const handleOnMouseOutLogo = () => {\n        // setLogoText('insta->users')\n    }\n\n    return (\n        <div className={classes.root}>\n\n            <Typography\n                className={classes.logo}\n                variant='h6'\n                onMouseOver={handleOnMouseOverLogo}\n                onMouseOut={handleOnMouseOutLogo}\n            >\n                {logoText}\n            </Typography>\n            <Typography\n                className={classes.logoAdditional}\n                variant='h6'\n                color='secondary'\n                onMouseOver={handleOnMouseOverLogo}\n                onMouseOut={handleOnMouseOutLogo}\n            >\n                users\n            </Typography>\n        </div>\n    )\n}\n","import React, {useContext} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport AppBar from '@material-ui/core/AppBar'\nimport Search from \"../Search\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Context from \"../../context\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport Logo from \"../Logo\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        zIndex: theme.zIndex.drawer + 1,\n        height: theme.spacing(8),\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        padding: theme.spacing(1),\n    },\n    menuButton: {\n        marginRight: theme.spacing(1)\n    },\n}))\n\nexport default function Header() {\n    const classes = useStyles()\n\n    const {toggleMenu} = useContext(Context)\n\n    return (\n        <AppBar position='fixed' color='inherit' elevation={0} className={classes.root}>\n            <div className={classes.content}>\n                <IconButton className={classes.menuButton} onClick={() => toggleMenu()}>\n                    <MenuIcon/>\n                </IconButton>\n\n                <Hidden xsDown>\n                    <Logo/>\n                </Hidden>\n\n                <Search/>\n            </div>\n        </AppBar>\n    )\n}\n","import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        borderRadius: theme.spacing(1, 1, 1, 1)\n    }\n}))\n\nexport default function DrawerItem({text, icon, onClick}) {\n    const classes = useStyles()\n\n    return (\n        <ListItem\n            button\n            className={classes.root}\n            onClick={() => onClick()}\n        >\n            <ListItemIcon>{icon}</ListItemIcon>\n            <ListItemText primary={text}/>\n        </ListItem>\n    )\n}\n","import React, {useContext} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport {ArchiveOutlined, AssignmentOutlined, HomeOutlined} from \"@material-ui/icons\"\nimport Context from \"../../context\"\nimport {useHistory} from \"react-router-dom\"\nimport clsx from \"clsx\"\nimport {Toolbar} from \"@material-ui/core\"\nimport DrawerItem from \"./DrawerItem\"\nimport Logo from \"../Logo\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 240,\n        height: '100%',\n        flexShrink: 0,\n        padding: theme.spacing(0, 1),\n    },\n    paper: {\n        width: 240,\n        border: 'none',\n    },\n    close: {\n        width: 0,\n    },\n    logo: {\n        margin: theme.spacing(2, 0, 2, 2),\n    },\n    list: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(1)\n    },\n}))\n\nexport default function NavDrawer({isOpenMenu, isMobile}) {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const {toggleMenu} = useContext(Context)\n\n    const goPage = (pagePath) => {\n        history.push(`/${pagePath}`)\n\n        if (isMobile) {\n            toggleMenu()\n        }\n    }\n\n    return (\n        <Drawer\n            variant={isMobile ? 'temporary' : 'persistent'}\n            anchor='left'\n            className={clsx(classes.root, !isOpenMenu && classes.close)}\n            classes={{\n                paper: classes.paper,\n            }}\n            open={isOpenMenu}\n            onClose={() => toggleMenu()}\n        >\n            {isMobile &&\n            <div className={classes.logo}>\n                <Logo/>\n            </div>\n            }\n\n            {!isMobile && <Toolbar/>}\n\n            <List className={classes.list}>\n                <DrawerItem\n                    text='Home'\n                    isSelected={true}\n                    icon={<HomeOutlined/>}\n                    onClick={() => goPage('')}\n                />\n                <DrawerItem\n                    text='Sets'\n                    isSelected={false}\n                    icon={<ArchiveOutlined/>}\n                    onClick={() => goPage('sets')}\n                />\n                <DrawerItem\n                    text='Tasks'\n                    isSelected={false}\n                    icon={<AssignmentOutlined/>}\n                    onClick={() => goPage('tasks')}\n                />\n            </List>\n        </Drawer>\n    )\n}\n","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {SentimentDissatisfied} from \"@material-ui/icons\"\nimport Typography from \"@material-ui/core/Typography\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        minHeight: theme.spacing(8)\n    }\n}))\n\nexport default function Empty() {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <SentimentDissatisfied color='primary'/>\n            <Typography variant='body1'>\n                Ooops... It's empty in here\n            </Typography>\n        </div>\n    )\n}\n","import React from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Typography from \"@material-ui/core/Typography\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(6)\n    },\n    title: {\n        marginBottom: theme.spacing(2)\n    }\n}))\n\nexport default function Section({title, children}) {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h6\" className={classes.title}>\n                {title}\n            </Typography>\n\n            <div>\n                {children}\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\n\nimport {CloseRounded, DoneAllRounded, StopRounded,} from \"@material-ui/icons\"\nimport {useDispatch} from \"react-redux\"\nimport Typography from \"@material-ui/core/Typography\"\nimport {Box} from \"@material-ui/core\"\nimport Paper from \"@material-ui/core/Paper\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport {deleteTask, updateTask} from \"../../actions/tasks\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1)\n    },\n    status: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: theme.spacing(1)\n    },\n    statusText: {\n        marginRight: theme.spacing(1)\n    },\n    settings: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: 'auto'\n    }\n}))\n\nexport default function Task({task}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const handleDeleteTask = (id) => {\n        dispatch(deleteTask(task.id))\n    }\n\n    const handleUpdateTask = (task) => {\n        dispatch(updateTask({...task, isWorking: false}))\n    }\n\n    return (\n        <Paper className={classes.root} variant='outlined' key={task.id}>\n            <div>\n                <Typography variant='body1'>\n                    <Box fontWeight=\"fontWeightMedium\">\n                        {task.name}\n                    </Box>\n                </Typography>\n                <div className={classes.status}>\n                    <Typography\n                        className={classes.statusText}\n                        variant='body2'\n                    >\n                        {new Date(task.startDate).toLocaleTimeString()}\n                    </Typography>\n                    {task.isWorking && <CircularProgress color='primary' thickness={6} size={14}/>}\n                </div>\n            </div>\n\n            <div className={classes.settings}>\n                {task.isWorking &&\n                <IconButton size='small'\n                            onClick={() => handleUpdateTask(task)}>\n                    <StopRounded/>\n                </IconButton>\n                }\n                {task.isDone && <DoneAllRounded color='primary'/>}\n\n                <IconButton size='small'\n                            onClick={() => handleDeleteTask(task.id)}>\n                    <CloseRounded/>\n                </IconButton>\n            </div>\n        </Paper>\n    )\n}\n","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\n\nimport {DeleteOutlineRounded, StopRounded} from \"@material-ui/icons\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {clearTasks, setDelayInTask, updateTask} from \"../../actions/tasks\"\nimport Typography from \"@material-ui/core/Typography\"\nimport {CardActionArea} from \"@material-ui/core\"\nimport Slider from \"@material-ui/core/Slider\"\nimport StatisticItem from \"../StatisticItem\"\nimport Empty from \"../Empty\"\nimport Card from \"@material-ui/core/Card\"\nimport Section from \"../Section\"\nimport Task from \"../Task\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    settings: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        overflow: 'auto',\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1)\n    },\n    settingsItemAction: {\n        width: '100%',\n        height: '100%'\n    },\n    settingsItemContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: theme.spacing(2),\n        minHeight: theme.spacing(8),\n        minWidth: theme.spacing(8),\n    },\n    settingItem: {\n        marginRight: theme.spacing(1),\n        flexShrink: 0,\n    }\n}))\n\nexport default function TasksPage() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const tasks = useSelector(state => state.tasks.tasks)\n    const delayInTask = useSelector(state => state.tasks.delayInTask)\n\n    const stopAll = () => {\n        tasks.map(task => dispatch(updateTask({...task, isWorking: false, isDone: true})))\n    }\n\n    return (\n        <div>\n            <Section title='Settings'>\n                <div className={classes.settings}>\n                    <Card className={classes.settingItem} variant='outlined' onClick={() => stopAll()}>\n                        <CardActionArea className={classes.settingsItemAction}>\n                            <div className={classes.settingsItemContent}>\n                                <StopRounded color='primary'/>\n                                <Typography variant='subtitle2'>Stop all</Typography>\n                            </div>\n                        </CardActionArea>\n                    </Card>\n\n                    <Card className={classes.settingItem} variant='outlined' onClick={() => dispatch(clearTasks())}>\n                        <CardActionArea className={classes.settingsItemAction}>\n                            <div className={classes.settingsItemContent}>\n                                <DeleteOutlineRounded color='primary'/>\n                                <Typography variant='subtitle2'>Delete all</Typography>\n                            </div>\n                        </CardActionArea>\n                    </Card>\n\n                    <Card className={classes.settingItem} variant='outlined'>\n                        <div className={classes.settingsItemAction}>\n                            <div className={classes.settingsItemContent}>\n                                <StatisticItem text='Delay between requests, ms' value={delayInTask}/>\n                                <Slider\n                                    color='primary'\n                                    value={delayInTask}\n                                    onChange={(event, newValue) => dispatch(setDelayInTask(newValue))}\n                                    step={100}\n                                    min={500}\n                                    max={5000}\n                                />\n                            </div>\n                        </div>\n                    </Card>\n                </div>\n            </Section>\n            <Section title='Tasks'>\n                <div>\n                    {tasks.length === 0 && <Empty/>}\n\n                    {tasks.map((task) =>\n                        <Task task={task}/>\n                    )}\n                </div>\n            </Section>\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport TableContainer from \"@material-ui/core/TableContainer\"\nimport Table from \"@material-ui/core/Table\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport {Avatar, Box, Hidden, Typography} from \"@material-ui/core\"\nimport TablePagination from \"@material-ui/core/TablePagination\"\nimport Empty from \"../Empty\"\nimport {useHistory} from \"react-router-dom\"\nimport Card from \"@material-ui/core/Card\"\nimport Button from \"@material-ui/core/Button\"\nimport {CSVLink} from \"react-csv\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport clsx from \"clsx\"\nimport {ClearAllRounded, DeleteOutlineRounded, MoreVertRounded, SaveAltRounded} from \"@material-ui/icons\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport Menu from \"@material-ui/core/Menu\"\nimport {useDispatch} from \"react-redux\"\nimport {clearAccounts, deleteSet} from \"../../actions/sets\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(1)\n    },\n    header: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(2)\n    },\n    headerTitle: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    headerSubtitle: {},\n    expand: {\n        marginLeft: theme.spacing(1),\n        transform: 'rotate(0deg)',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        flexWrap: 'nowrap',\n        marginLeft: 'auto'\n    },\n    actionsButton: {\n        marginLeft: theme.spacing(1)\n    },\n    content: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(2),\n    },\n    pagination: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    accountAvatar: {\n        width: theme.spacing(3),\n        height: theme.spacing(3)\n    },\n    csvExportLink: {\n        textDecoration: 'none',\n        color: 'inherit',\n        display: 'flex',\n        alignItems: 'center'\n    },\n    menuIcon: {\n        minWidth: 0,\n        marginRight: theme.spacing(2)\n    }\n}))\n\nconst headCells = [\n    {id: 'profile_pic_url', label: 'Pic'},\n    {id: 'id', label: 'Id'},\n    {id: 'username', label: 'Username'},\n    {id: 'full_name', label: 'Full name'},\n    {id: 'is_verified', label: 'Is verified'},\n]\n\nfunction SetMenu({setId, accounts}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const [anchorEl, setAnchorEl] = useState(null)\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget)\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n\n    const handleDelete = () => {\n        dispatch(deleteSet(setId))\n        handleClose()\n    }\n\n    const handleClear = () => {\n        dispatch(clearAccounts(setId))\n        handleClose()\n    }\n\n    return (\n        <div>\n            <IconButton\n                className={classes.actionsButton}\n                size='small'\n                onClick={handleClick}\n            >\n                <MoreVertRounded/>\n            </IconButton>\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleDelete}>\n                    <ListItemIcon className={classes.menuIcon}>\n                        <DeleteOutlineRounded/>\n                    </ListItemIcon>\n                    <ListItemText primary='Delete'/>\n                </MenuItem>\n                <MenuItem onClick={handleClear}>\n                    <ListItemIcon className={classes.menuIcon}>\n                        <ClearAllRounded/>\n                    </ListItemIcon>\n                    <ListItemText primary='Clear'/>\n                </MenuItem>\n                <Hidden smUp>\n                    <CSVLink\n                        style={{textDecoration: 'none', color: 'inherit'}}\n                        data={accounts.map((account) => account.node)}\n                        filename={\"accounts.csv\"}\n                    >\n                        <MenuItem>\n                            <ListItemIcon className={classes.menuIcon}>\n                                <SaveAltRounded/>\n                            </ListItemIcon>\n                            <ListItemText primary='Export to CSV'/>\n                        </MenuItem>\n                    </CSVLink>\n                </Hidden>\n            </Menu>\n        </div>\n    )\n}\n\nexport default function Set({id, name, accounts}) {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const [page, setPage] = useState(0)\n    const [rowsPerPage, setRowsPerPage] = useState(15)\n    const [isExpanded, setIsExpanded] = useState(false)\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const onClickAccount = (username) => {\n        history.push(`/u/${username}`)\n    }\n\n    return (\n        <Card variant='outlined' className={classes.root}>\n            <div className={classes.header}>\n                <div className={classes.headerTitle}>\n                    <Typography noWrap>\n                        <Box fontWeight=\"fontWeightMedium\" component='span'>\n                            {name}\n                        </Box>\n                    </Typography>\n\n                    <IconButton\n                        size='small'\n                        className={clsx(classes.expand, isExpanded && classes.expandOpen)}\n                        onClick={() => setIsExpanded(!isExpanded)}\n                    >\n                        <ExpandMoreIcon/>\n                    </IconButton>\n\n                    <div className={classes.actions}>\n                        <Hidden xsDown>\n                            <CSVLink\n                                style={{textDecoration: 'none', color: 'inherit'}}\n                                data={accounts.map((account) => account.node)}\n                                filename={\"accounts.csv\"}\n                            >\n                                <Button\n                                    className={classes.actionsButton}\n                                    startIcon={<SaveAltRounded/>}\n                                    variant='contained'\n                                    size='small'\n                                    disableElevation\n                                    color='primary'\n                                >\n                                    Export to CSV\n                                </Button>\n                            </CSVLink>\n                        </Hidden>\n\n                        <SetMenu setId={id} accounts={accounts}/>\n                    </div>\n                </div>\n                <div className={classes.headerSubtitle}>\n                    <Typography variant='subtitle2' color='textSecondary'>{`${accounts.length} accounts`}</Typography>\n                </div>\n            </div>\n\n            <Collapse in={isExpanded}>\n                <div className={classes.content}>\n                    {accounts.length === 0 && <Empty/>}\n\n                    {accounts.length !== 0 &&\n                    <div>\n                        <TableContainer>\n                            <Table size='small'>\n                                <TableHead>\n                                    <TableRow>\n                                        {headCells.map((headCell) => (\n                                            <TableCell key={headCell.id} align='left'>\n                                                {headCell.label}\n                                            </TableCell>\n                                        ))}\n                                    </TableRow>\n                                </TableHead>\n\n                                <TableBody>\n                                    {accounts\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        .map((row) =>\n                                            <TableRow hover key={row.node.id}\n                                                      onClick={() => onClickAccount(row.node.username)}>\n                                                <TableCell align=\"left\">\n                                                    <Avatar className={classes.accountAvatar}\n                                                            src={row.node.profile_pic_url}/>\n                                                </TableCell>\n                                                <TableCell align=\"left\">{row.node.id}</TableCell>\n                                                <TableCell align=\"left\">{row.node.username}</TableCell>\n                                                <TableCell align=\"left\">{row.node.full_name}</TableCell>\n                                                <TableCell\n                                                    align=\"left\">{row.node.is_verified ? 'verified' : 'not verified'}</TableCell>\n                                            </TableRow>\n                                        )}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <TablePagination\n                            className={classes.pagination}\n                            rowsPerPageOptions={[]}\n                            component=\"div\"\n                            count={accounts.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                        />\n                    </div>\n                    }\n                </div>\n            </Collapse>\n        </Card>\n    )\n}\n","import React, {useState} from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport {DialogContentText} from \"@material-ui/core\"\nimport TextField from \"@material-ui/core/TextField\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport Button from \"@material-ui/core/Button\"\nimport {v4 as uuidv4} from 'uuid'\nimport {useDispatch} from \"react-redux\"\nimport {addSet} from \"../../actions/sets\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {}\n}))\n\nexport default function SetCreateDialog({onClose, open}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const [setName, setSetName] = useState('')\n\n    const handleCreateClick = () => {\n        const newSet = {\n            id: uuidv4(),\n            name: setName,\n            accounts: []\n        }\n\n        dispatch(addSet(newSet))\n        setSetName('')\n        onClose()\n    }\n\n    return (\n        <Dialog open={open} onClose={() => onClose()}>\n            <DialogTitle>New Set</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Create a new set for adding accounts.\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    fullWidth\n                    label=\"Set name\"\n                    value={setName}\n                    onChange={(event) => setSetName(event.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => onClose()} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={() => handleCreateClick()} color=\"primary\">\n                    Create\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, {useEffect, useState} from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport {DialogContentText} from \"@material-ui/core\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport Button from \"@material-ui/core/Button\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {v4 as uuidv4} from \"uuid\"\nimport {addSet} from \"../../actions/sets\"\nimport TextField from \"@material-ui/core/TextField\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport FormLabel from \"@material-ui/core/FormLabel\"\nimport FormGroup from \"@material-ui/core/FormGroup\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport FormHelperText from \"@material-ui/core/FormHelperText\"\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\nimport Radio from \"@material-ui/core/Radio\"\nimport {intersection, subtraction, union} from \"../../utils\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    control: {\n        marginTop: theme.spacing(4),\n    }\n}))\n\nexport default function SetOperationsDialog({onClose, open}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const sets = useSelector(state => state.sets.sets)\n\n    const [setName, setSetName] = useState('')\n    const [selectedSets, setSelectedSets] = useState(sets.map(set => ({...set, select: false})))\n    const [operation, setOperation] = useState('union')\n\n    const error = selectedSets.filter((set) => set.select).length !== 2\n\n    useEffect(() => {\n        const newSets = sets.map(set => {\n            const selectedSet = selectedSets.find(s => s.id === set.id)\n\n            return {\n                ...set,\n                select: selectedSet ? selectedSet.select : false\n            }\n        })\n\n        setSelectedSets(newSets)\n    }, [sets])\n\n    const getAccounts = (operation, setA, setB) => {\n        switch (operation) {\n            case 'union':\n                return union(setA, setB)\n            case 'intersection':\n                return intersection(setA, setB)\n            case 'subtraction':\n                return subtraction(setA, setB)\n            default:\n                return []\n        }\n    }\n\n    const handleCreateClick = () => {\n        if (!error) {\n            const newSet = {\n                id: uuidv4(),\n                name: setName,\n                accounts: getAccounts(operation, ...selectedSets.filter((set) => set.select).map(set => set.accounts))\n            }\n\n            dispatch(addSet(newSet))\n            setSetName('')\n            onClose()\n        }\n    }\n\n    const handleChange = (event) => {\n        setSelectedSets(selectedSets.map(set =>\n            set.id === event.target.value ? {\n                ...set,\n                select: event.target.checked\n            } : set)\n        )\n    }\n\n    return (\n        <Dialog open={open} onClose={() => onClose()}>\n            <DialogTitle>Set Operations</DialogTitle>\n            <DialogContent className={classes.content}>\n                <DialogContentText>\n                    Create a new set using operations and other sets of accounts.\n                </DialogContentText>\n\n                <TextField\n                    autoFocus\n                    fullWidth\n                    label=\"Set name\"\n                    value={setName}\n                    onChange={(event) => setSetName(event.target.value)}\n                />\n\n                <FormControl className={classes.control} component=\"fieldset\">\n                    <FormLabel component=\"legend\">Operation</FormLabel>\n                    <RadioGroup value={operation} onChange={(event) => setOperation(event.target.value)}>\n                        <FormControlLabel value=\"union\" control={<Radio color='primary'/>} label=\"Union\"/>\n                        <FormControlLabel value=\"intersection\" control={<Radio color='primary'/>} label=\"Intersection\"/>\n                        <FormControlLabel value=\"subtraction\" control={<Radio color='primary'/>} label=\"Subtraction\"/>\n                    </RadioGroup>\n                </FormControl>\n\n                <FormControl className={classes.control} component='fieldset'>\n                    <FormLabel>Account sets</FormLabel>\n\n                    <FormGroup>\n                        {selectedSets.map(set =>\n                            <FormControlLabel\n                                key={set.id}\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={set.select}\n                                        onChange={(event) => handleChange(event)}\n                                        value={set.id}\n                                    />\n                                }\n                                label={set.name}\n                            />\n                        )}\n                    </FormGroup>\n                    <FormHelperText error={error}>Pick two sets</FormHelperText>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => onClose()} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={() => handleCreateClick()} color=\"primary\">\n                    Create\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, {useState} from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {CardActionArea, Grid} from \"@material-ui/core\"\nimport Typography from \"@material-ui/core/Typography\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport Empty from \"../Empty\"\nimport {\n    AddCircleOutlineRounded,\n    AddRounded,\n    ClearAllRounded,\n    DeleteOutlineRounded,\n    HighlightOffRounded,\n    RemoveCircleOutlineRounded\n} from \"@material-ui/icons\"\nimport {clearSets, updateSet} from \"../../actions/sets\"\nimport Card from \"@material-ui/core/Card\"\nimport Section from \"../Section\"\nimport Set from \"../Set\"\nimport SetCreateDialog from \"../SetCreateDialog\"\nimport SetOperationsDialog from \"../SetOperationsDialog\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    settings: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        overflow: 'auto',\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1)\n    },\n    settingsItemAction: {\n        width: '100%',\n        height: '100%'\n    },\n    settingsItemContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: theme.spacing(2),\n        minHeight: theme.spacing(8),\n        minWidth: theme.spacing(8),\n    },\n    settingItem: {\n        marginRight: theme.spacing(1),\n        flexShrink: 0,\n    },\n\n    tablePaper: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    pagination: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    accountAvatar: {\n        width: theme.spacing(3),\n        height: theme.spacing(3)\n    }\n}))\n\nexport default function SetsPage() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const sets = useSelector(state => state.sets.sets)\n\n    const [openSetCreateDialog, setOpenSetCreateDialog] = useState(false)\n    const [openSetOperatorDialog, setOpenSetOperatorDialog] = useState(false)\n\n    const handleClickOpenCreateDialog = () => {\n        setOpenSetCreateDialog(true)\n    }\n\n    const handleCloseCreateDialog = () => {\n        setOpenSetCreateDialog(false)\n    }\n\n    const handleClickOpenOperatorDialog = () => {\n        setOpenSetOperatorDialog(true)\n    }\n\n    const handleCloseOperatorDialog = () => {\n        setOpenSetOperatorDialog(false)\n    }\n\n    return (\n        <div className={classes.root}>\n            <Section title='Settings'>\n                <div className={classes.settings}>\n                    <Card className={classes.settingItem} variant='outlined'\n                          onClick={() => handleClickOpenCreateDialog()}>\n                        <CardActionArea className={classes.settingsItemAction}>\n                            <div className={classes.settingsItemContent}>\n                                <AddRounded color='secondary'/>\n                                <Typography variant='subtitle2'>Create new</Typography>\n                            </div>\n                        </CardActionArea>\n                    </Card>\n\n                    <Card className={classes.settingItem} variant='outlined'\n                          onClick={() => handleClickOpenOperatorDialog()}>\n                        <CardActionArea className={classes.settingsItemAction}>\n                            <div className={classes.settingsItemContent}>\n                                <Grid justify='space-around' container spacing={1}>\n                                    <Grid item>\n                                        <RemoveCircleOutlineRounded color='secondary'/>\n                                    </Grid>\n                                    <Grid item>\n                                        <HighlightOffRounded color='secondary'/>\n                                    </Grid>\n                                    <Grid item>\n                                        <AddCircleOutlineRounded color='secondary'/>\n                                    </Grid>\n                                </Grid>\n                                <Typography variant='subtitle2'>Operations</Typography>\n                            </div>\n                        </CardActionArea>\n                    </Card>\n\n                    <Card className={classes.settingItem} variant='outlined'\n                          onClick={() => dispatch(clearSets())}>\n                        <CardActionArea className={classes.settingsItemAction}>\n                            <div className={classes.settingsItemContent}>\n                                <DeleteOutlineRounded color='primary'/>\n                                <Typography variant='subtitle2'>Delete all</Typography>\n                            </div>\n                        </CardActionArea>\n                    </Card>\n\n                    <Card className={classes.settingItem} variant='outlined'\n                          onClick={() => sets.map((set) => dispatch(updateSet({...set, accounts: []})))}>\n                        <CardActionArea className={classes.settingsItemAction}>\n                            <div className={classes.settingsItemContent}>\n                                <ClearAllRounded color='primary'/>\n                                <Typography variant='subtitle2'>Clear all</Typography>\n                            </div>\n                        </CardActionArea>\n                    </Card>\n                </div>\n            </Section>\n\n            <Section title='Sets of account'>\n                {sets.length === 0 && <Empty/>}\n\n                {sets.map((set) =>\n                    <Set key={set.id} id={set.id} name={set.name} accounts={set.accounts}/>\n                )}\n            </Section>\n\n            <SetOperationsDialog open={openSetOperatorDialog} onClose={() => handleCloseOperatorDialog()}/>\n            <SetCreateDialog open={openSetCreateDialog} onClose={() => handleCloseCreateDialog()}/>\n        </div>\n    )\n}\n","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport {IconButton} from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        margin: theme.spacing(1),\n    },\n    avatar: {\n        width: theme.spacing(8),\n        height: theme.spacing(8),\n        padding: 0,\n    },\n\n    title: {\n        maxWidth: theme.spacing(12)\n    }\n}))\n\nexport default function ViewedAccount({username, profilePic, onClick}) {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <IconButton onClick={() => onClick()}>\n                <Avatar className={classes.avatar} src={profilePic}/>\n            </IconButton>\n            <Typography variant='subtitle2' className={classes.title} noWrap>\n                {username}\n            </Typography>\n        </div>\n    )\n}\n","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Section from \"../Section\"\nimport ViewedAccount from \"../ViewedAccount\"\nimport Card from \"@material-ui/core/Card\"\nimport {useSelector} from \"react-redux\"\nimport StatisticItem from \"../StatisticItem\"\nimport {useHistory} from \"react-router-dom\"\nimport Empty from \"../Empty\"\nimport Zoom from \"@material-ui/core/Zoom\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    viewedAccounts: {\n        display: 'flex',\n        alignItems: 'center',\n        flexWrap: 'nowrap',\n        overflow: 'auto',\n    },\n    empty: {\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n    statsCard: {\n        padding: theme.spacing(2),\n    },\n    stats: {\n        marginBottom: theme.spacing(1)\n    }\n}))\n\nexport default function HomePage() {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const tasks = useSelector(state => state.tasks.tasks)\n    const sets = useSelector(state => state.sets.sets)\n    const viewedAccounts = useSelector(state => state.viewedAccounts.viewedAccounts)\n\n    const handleClickOnAccount = (username) => {\n        if (username || username !== '') {\n            history.push(`/u/${username}`)\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Section title='Last viewed accounts'>\n                <div className={classes.viewedAccounts}>\n                    {viewedAccounts.length === 0 &&\n                    <div className={classes.empty}>\n                        <Empty/>\n                    </div>\n                    }\n\n                    {viewedAccounts.map((account) =>\n                        <Zoom in={true}>\n                            <ViewedAccount\n                                key={account.id}\n                                username={account.username}\n                                profilePic={account.profile_pic_url}\n                                onClick={() => handleClickOnAccount(account.username)}\n                            />\n                        </Zoom>\n                    )}\n                </div>\n            </Section>\n\n            <Section title='Status'>\n                <Card variant='outlined' className={classes.statsCard}>\n                    <div className={classes.stats}>\n                        <StatisticItem text='Number of account sets' value={sets.length}/>\n                    </div>\n                    <div className={classes.stats}>\n                        <StatisticItem text='Number of working tasks' value={tasks.filter(t => t.isWorking).length}/>\n                    </div>\n                    <div className={classes.stats}>\n                        <StatisticItem text='Number of completed tasks' value={tasks.filter(t => t.isDone).length}/>\n                    </div>\n                </Card>\n            </Section>\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport {Provider} from \"react-redux\"\nimport store from \"../../store\"\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\"\nimport NotFoundPage from \"../Pages/NotFoundPage\"\nimport UserPage from \"../Pages/UserPage\"\nimport Header from \"../Header\"\nimport {createMuiTheme, responsiveFontSizes, Toolbar, useMediaQuery} from \"@material-ui/core\"\nimport {ThemeProvider} from \"@material-ui/styles\"\nimport Context from \"../../context\"\nimport NavDrawer from \"../NavDrawer\"\nimport TasksPage from \"../Pages/TasksPage\"\nimport SetsPage from \"../Pages/SetsPage\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport HomePage from \"../Pages/HomePage\"\nimport Container from \"@material-ui/core/Container\"\n\nconst customTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#304ffe',\n            light: '#7b7cff',\n            dark: '#0026ca'\n        },\n        secondary: {\n            main: '#1de9b6',\n            light: '#1de9b6',\n            dark: '#00b686'\n        },\n        background: {\n            light: '#f1f3f4'\n        }\n    },\n    typography: {\n        fontFamily: [\n            'Poppins',\n            'Helvetica',\n            'Arial',\n            'sans-serif',\n        ].join(','),\n    },\n})\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        display: 'flex',\n        flexGrow: 1,\n    },\n    page: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(2)\n    }\n}))\n\nexport default function App() {\n    const classes = useStyles()\n\n    const isMobile = useMediaQuery(customTheme.breakpoints.down(\"sm\"), {\n        noSsr: true\n    })\n\n    const [isOpenMenu, setIsOpenMenu] = useState(() => !isMobile)\n\n    const toggleMenu = () => {\n        setIsOpenMenu(!isOpenMenu)\n    }\n\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={responsiveFontSizes(customTheme)}>\n                <Context.Provider value={{toggleMenu}}>\n                    <BrowserRouter basename={process.env.PUBLIC_URL}>\n                        <div className={classes.root}>\n                            <Header/>\n\n                            <Toolbar/>\n\n                            <div className={classes.content}>\n                                <NavDrawer isOpenMenu={isOpenMenu} isMobile={isMobile}/>\n\n                                <Container maxWidth=\"md\" className={classes.page}>\n                                    <Switch>\n                                        <Route path='/' exact component={HomePage}/>\n                                        <Route path='/notfound' component={NotFoundPage}/>\n                                        <Route path='/u/:username' component={UserPage}/>\n                                        <Route path='/tasks' component={TasksPage}/>\n                                        <Route path='/sets' component={SetsPage}/>\n                                    </Switch>\n                                </Container>\n                            </div>\n                        </div>\n                    </BrowserRouter>\n                </Context.Provider>\n            </ThemeProvider>\n        </Provider>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './Components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}